@import url(../libs/normalize-css/normalize.css);
@import url(../libs/animate.css/animate.min.css);
include {
  width: 300px;
  height: 200px;
  margin: 5px;
  padding: 5px;
  padding: 10px;
  height: 12px;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 1;
      -ms-flex: 0 0 1;
          flex: 0 0 1;
  font-family: "Felix Titling"; }
  @media screen and (max-width: 664px) {
    include {
      height: 12px;
      height: 300px;
      display: block;
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-flex: 1;
      -webkit-flex: 1 1 0;
          -ms-flex: 1 1 0px;
              flex: 1 1 0;
      height: 100px; } }

html {
  font-size: 16px;
  line-height: 1; }

ul,
li {
  margin: 0;
  padding: 0;
  list-style-type: none; }

p {
  margin: 0; }

a {
  text-decoration: none;
  color: blue; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.hide {
  display: none; }

.show {
  display: block; }

.clearfix:after {
  content: '';
  display: table;
  line-height: 0;
  clear: both; }

.wrapper {
  width: 100%;
  max-width: 1270px;
  margin: 0 auto;
  position: relative; }

.index__index {
  background: #000; }

.index {
  display: block;
  margin: 0 auto;
  margin: 2%;
  padding: 13px;
  padding: 5px;
  margin: 3px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 5px; }
  .index .inidex {
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    border: 1px solid #d3d;
    header: 1px solid #f3d; }

.nav__menu {
  display: block;
  background: #000; }

.hh {
  display: block; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlcyI6WyJzdHlsZS5zY3NzIiwiX21peGlucy5zY3NzIiwiX3ZhcnMuc2NzcyIsIl9saWJzLnNjc3MiLCJfZm9udHMuc2NzcyIsIl9jb21tb25fc3R5bGVzLnNjc3MiLCJtb2R1bGVzL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvX2Zvb3Rlci5zY3NzIiwibW9kdWxlcy9fbWVudS5zY3NzIiwicGFnZXMvX2luZGV4LnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIm1peGluc1wiO1xyXG5AaW1wb3J0IFwidmFyc1wiO1xyXG5AaW1wb3J0IFwibGlic1wiO1xyXG5AaW1wb3J0IFwiZm9udHNcIjtcclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBsaW5lLWhlaWdodDogMTtcclxufVxyXG5cclxudWwsXHJcbmxpIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbn1cclxuXHJcbnAge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG5hdWRpbyxcclxuY2FudmFzLFxyXG5pZnJhbWUsXHJcbmltZyxcclxuc3ZnLFxyXG52aWRlbyB7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIHJlc2l6ZTogbm9uZTtcclxufVxyXG5cclxuc2VjdGlvbiB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG5idXR0b24ge1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbiosXHJcbio6YmVmb3JlLFxyXG4qOmFmdGVyIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4uaGlkZSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnNob3cge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY2xlYXJmaXgge1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGxpbmUtaGVpZ2h0OiAwO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgfVxyXG59XHJcblxyXG4vL2PRgtC40LvQuCDQv9GA0L7QtdC60YLQsFxyXG4ud3JhcHBlciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiAxMjcwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAvLyBvdmVyZmxvdy14OiBoaWRkZW47XHJcbn1cclxuXHJcbi8vINCe0LHRidC40LUg0YHRgtC40LvQuFxyXG5AaW1wb3J0ICdjb21tb25fc3R5bGVzLnNjc3MnO1xyXG5cclxuLy8g0JzQntCU0KPQm9CYXHJcbi8vINCh0YLQuNC70Lgg0YjQsNC/0LrQuFxyXG5AaW1wb3J0ICdtb2R1bGVzL19oZWFkZXIuc2Nzcyc7XHJcbi8vINCh0YLQuNC70Lgg0YTRg9GC0LXRgNCwXHJcbkBpbXBvcnQgJ21vZHVsZXMvZm9vdGVyLnNjc3MnO1xyXG4vLyDQodGC0LjQu9C4INC80LXQvdGOXHJcbkBpbXBvcnQgJ21vZHVsZXMvbWVudS5zY3NzJztcclxuLy8g0KHQotCg0JDQndCY0KbQq1xyXG4vLyDQodGC0LjQu9C4INC60L7QvdGC0LXQvdGC0LAv0YHRgtGA0LDQvdC40YZcclxuQGltcG9ydCAncGFnZXMvaW5kZXguc2Nzcyc7XHJcbi8vXHJcblxyXG5cclxuIiwiLy/QuNGB0L/QvtC70YzQt9C+0LLQsNC90LjRjyBAaW5jbHVkZSBf0L3QsNC30LLQsNC90LjQtSDQvNC40LrRgdC40L3QsF8oINC/0YDQuNC90LjQvNCw0LXQvNC1INCw0YDQs9GD0LzQtdC90YLRiywuLi4pXHJcblxyXG4vLyBtYXJnaW4gMCBhdXRvXHJcbkBtaXhpbiBwdXNoLS1hdXRvKCkge1xyXG4gICAgbWFyZ2luOiB7XHJcbiAgICAgICAgbGVmdDogYXV0bztcclxuICAgICAgICByaWdodDogYXV0bztcclxuICAgIH1cclxufVxyXG5cclxuLy/QtNC+0LHQsNCy0Y/Qu9GC0Ywg0LIg0L/RgdC10LLQtNC+0Y3Qu9C10LzQtdC90YLRi1xyXG5AbWl4aW4gcGVsZW0oKSB7XHJcbiAgICBjb250ZW50OiAkY29udGVudDtcclxuICAgIGRpc3BsYXk6ICRkaXNwbGF5O1xyXG4gICAgcG9zaXRpb246ICRwb3M7XHJcbn1cclxuXHJcbi8v0YDQsNCy0L3QvtCx0LXQtNGA0LXQvdC90YvQtSDRgtGA0LXRg9Cz0L7Qu9GM0L3QuNC60Lgg0LTQu9GPINC60L7QvNC10L3RgtCw0YDQuNC10LIg0LjQu9C4INC/0YDQvtGB0YLQviDRgtGA0LXRg9Cz0L7Qu9GM0L3QuNC60LhcclxuQG1peGluIGNzcy10cmlhbmdsZSgkY29sb3IsICRkaXJlY3Rpb24sICRzaXplOiA2cHgsICRwb3NpdGlvbjogYWJzb2x1dGUsICRyb3VuZDogZmFsc2UpIHtcclxuICAgIEBpbmNsdWRlIHBzZXVkbygkcG9zOiAkcG9zaXRpb24pO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICBAaWYgJHJvdW5kIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICB9XHJcblxyXG4gICAgQGlmICRkaXJlY3Rpb249PWRvd24ge1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXItcmlnaHQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci10b3A6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwIC0gcm91bmQoICRzaXplIC8gMi41KTtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb249PXVwIHtcclxuICAgICAgICBib3JkZXItbGVmdDogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAkc2l6ZSBzb2xpZCAkY29sb3I7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAtIHJvdW5kKCAkc2l6ZSAvIDIuNSk7XHJcbiAgICB9XHJcbiAgICBAZWxzZSBpZiAkZGlyZWN0aW9uPT1yaWdodCB7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyLWxlZnQ6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0kc2l6ZTtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb249PWxlZnQge1xyXG4gICAgICAgIGJvcmRlci10b3A6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci1yaWdodDogJHNpemUgc29saWQgJGNvbG9yO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtJHNpemU7XHJcbiAgICB9XHJcbn1cclxuXHJcbiAvL9Cy0YvRgNCw0LLQvdC40Y/QstCw0L3QuNC1INC/0L4g0YbQtdC90YLRgNGDINGN0LrRgNCw0L3QsCDQstC60LvRjtGH0LDRjyDQstGB0LUg0YHQu9GD0YfQsNC4XHJcbiAvL2h0dHBzOi8vd2ViZm9ybXlzZWxmLmNvbS9jZW50cmlyb3ZhbmllLXMtcG9tb3NoaHl1LXNhc3MvXHJcblxyXG4gQG1peGluIGNlbnRlcigkd2lkdGg6IG51bGwsICRoZWlnaHQ6IG51bGwpIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICBcclxuICAgIEBpZiBub3QgJHdpZHRoIGFuZCBub3QgJGhlaWdodCB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgfSBAZWxzZSBpZiAkd2lkdGggYW5kICRoZWlnaHQge1xyXG4gICAgICB3aWR0aDogJHdpZHRoO1xyXG4gICAgICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICAgIG1hcmdpbjogLSgkd2lkdGggLyAyKSAjezAgMH0gLSgkaGVpZ2h0IC8gMik7XHJcbiAgICB9IEBlbHNlIGlmIG5vdCAkaGVpZ2h0IHtcclxuICAgICAgd2lkdGg6ICR3aWR0aDtcclxuICAgICAgbWFyZ2luLWxlZnQ6IC0oJHdpZHRoIC8gMik7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICAgIG1hcmdpbi10b3A6IC0oJGhlaWdodCAvIDIpO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuLy/Qv9C10YDQtdCy0L7QtCDQuNC3INC/0LjQutGB0LXQu9C10Lkg0LIg0YDQtdC80YtcclxuQG1peGluIHJlbSgkc2l6ZSkge1xyXG4gICAgcmV0dXJuOiAoJHNpemUvMTYpcmVtO1xyXG59XHJcblxyXG4vL9C60YDQsNGC0LrQvtC1INC/0L7QtNC60LvRjtGH0LXQvdC40LUg0YjRgNC40YTRgtC+0LIgXHJcbi8v0L/RgNC40LzQtdGAIEBpbmNsdWRlIGZvbnRzIChldGMuLilcclxuQG1peGluIGZvbnRzICgkc2l6ZTogZmFsc2UsICRjb2xvdXI6IGZhbHNlLCAkd2VpZ2h0OiBmYWxzZSwgICRsaDogZmFsc2UpIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnU291cmNlIFNhbnMgUHJvJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICAgIEBpZiAkc2l6ZSB7IGZvbnQtc2l6ZTogJHNpemU7IH1cclxuICAgIEBpZiAkY29sb3VyIHsgY29sb3I6ICRjb2xvdXI7IH1cclxuICAgIEBpZiAkd2VpZ2h0IHsgZm9udC13ZWlnaHQ6ICR3ZWlnaHQ7IH1cclxuICAgIEBpZiAkbGggeyBsaW5lLWhlaWdodDogJGxoOyB9XHJcbiAgfVxyXG5cclxuLy8g0LPQvtGA0LjQt9C+0L3RgtCw0LvRjNC90L7QtSDQstGL0YDQsNCy0L3QuNCy0LDQvdC40LUg0LTQu9GPIGlubGluZSDQsdC70L7QutCwXHJcbi8vINC/0YDQuNC80LXRgDogQGluY2x1ZGUgZ29yaXpvbnRhbC1pYjtcclxuQG1peGluIGdvcml6b250YWwtaWIoKXtcclxuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICB6b29tOiAxO1xyXG4gIHRleHQtYWxpZ24tbGFzdDoganVzdGlmeTtcclxuXHJcbiAgJjphZnRlcntcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMHB4O1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB9XHJcbn1cclxuLy8g0LLQtdGA0YLQuNC60LDQu9GM0L3QvtC1INCy0YvRgNCw0LLQvdC40LLQsNC90LjQtSDQtNC70Y8gaW5saW5lINCx0LvQvtC60LBcclxuLy8g0L/RgNC40LzQtdGAOiBAaW5jbHVkZSB2ZXJ0aWNhbC1pYjtcclxuQG1peGluIHZlcnRpY2FsLWliKCl7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuXHJcbiAgJjpiZWZvcmV7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIHdpZHRoOiAwO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJcclxuLy8g0KbQktCV0KLQkFxyXG5cclxuXHJcbi8vINCg0JDQl9Cc0JXQoNCrXHJcblxyXG5cclxuLy8g0KjQoNCY0KTQotCrXHJcblxyXG5cclxuXHJcblxyXG4vL9CR0YDQtdC50LrQv9C+0LjQvdGC0YtcclxuJG1vYmlsZTozMjBweDtcclxuJG1vYmlsZS1tZDo0MjBweDtcclxuJHBoYWJsZXQ6NDgwcHg7XHJcbiRzbWwtdGFibGV0OjU0MHB4O1xyXG4kdGFibGV0Ojc0MHB4O1xyXG4kZGVza3RvcDo5ODBweDtcclxuJGxhcmdlOjEyNzBweDtcclxuLy/RiNC40YDQvtC60LjQuVxyXG5cclxuXHJcbiIsIkBpbXBvcnQgXCIuLi9saWJzL25vcm1hbGl6ZS1jc3Mvbm9ybWFsaXplLmNzc1wiO1xyXG5AaW1wb3J0ICcuLi9saWJzL2FuaW1hdGUuY3NzL2FuaW1hdGUubWluLmNzcyc7XHJcblxyXG5pbmNsdWRle1xyXG4gIHdpZHRoOiAzMDBweDtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG4gIG1hcmdpbjogNXB4O1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGhlaWdodDogMTJweDtcclxuICBmbGV4OiAwIDAgMSA7XHJcbiAgZm9udC1mYW1pbHk6IFwiRmVsaXggVGl0bGluZ1wiO1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY2NHB4KSB7XHJcbiAgICBoZWlnaHQ6IDEycHg7IFxyXG4gICAgaGVpZ2h0OjMwMHB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4OiAxIDEgMDtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgfVxyXG59IiwiQGltcG9ydCBcInZhcnNcIjtcclxuQGltcG9ydCBcIm1peGluc1wiO1xyXG5cclxuLy8g0L/RgNC40LzQtdGAINC/0L7QtNC60LvRjtGH0LXQvdC40Y8g0YjRgNC40YTRgtC+0LJcclxuLy9AaW5jbHVkZSBmb250LWZhY2UoJG5hbWUsJHBhdGgsICR3ZWlnaHQsICRzdHlsZSwkZm9ybWF0KGVvdCB0dGYgd29mZiB3b2ZmMikpO1xyXG5cclxuIiwiLy/Qt9C00LXRgdGMINC/0YDQvtC/0LjRgdGL0LLQsNGC0Ywg0YHRgtC40LvQuCDQtNC70Y8g0L/QvtCy0YLQvtGA0Y/RidC40YXRgdGPINGN0LvQtdC80LXQvdGC0L7QslxyXG4vLyDRgtCw0LrQuNGFINC60LDQuiDQutC90L7Qv9C+0Los0YLQtdC60YHRgtC+0LIgINC1dGMuLi5cclxuXHJcblxyXG4uaW5kZXhfX2luZGV4e1xyXG4gIGJhY2tncm91bmQ6ICMwMDA7XHJcblxyXG59XHJcblxyXG4iLCJAaW1wb3J0IFwiLi4vX21peGlucy5zY3NzXCI7XHJcbkBpbXBvcnQgXCIuLi9fdmFycy5zY3NzXCI7XHJcblxyXG4uaW5kZXgge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbjogMiU7XHJcbiAgcGFkZGluZzogMTNweDtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgbWFyZ2luOiAzcHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBtYXJnaW46IDVweDtcclxuXHJcbiAgLmluaWRleCB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDtcclxuICAgIGhlYWRlcjogMXB4IHNvbGlkICNmM2Q7XHJcbiAgfVxyXG59XHJcbiIsIi5uYXZfX21lbnUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGJhY2tncm91bmQ6ICMwMDA7XHJcblxyXG59IiwiQGltcG9ydCBcIi4uL21peGlucy5zY3NzXCI7XHJcbkBpbXBvcnQgXCIuLi92YXJzLnNjc3NcIjtcclxuXHJcbi5oaCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgXHJcblxyXG59XHJcblxyXG5cclxuIiwiQGltcG9ydCBcIi4uL19taXhpbnMuc2Nzc1wiO1xuQGltcG9ydCBcIi4uL192YXJzLnNjc3NcIjtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUdBQSxPQUFPLENBQVAsd0NBQU87QUFDUCxPQUFPLENBQVAsd0NBQU87QUFFUCxBQUFBLE9BQU8sQ0FBQTtFQUNMLEtBQUssRUFBRSxLQUFLO0VBQ1osTUFBTSxFQUFFLEtBQUs7RUFDYixNQUFNLEVBQUUsR0FBRztFQUNYLE9BQU8sRUFBRSxHQUFHO0VBQ1osT0FBTyxFQUFFLElBQUk7RUFDYixNQUFNLEVBQUUsSUFBSTtFQUNaLElBQUksRUFBRSxLQUFNO0VBQ1osV0FBVyxFQUFFLGVBQWUsR0FTN0I7RUFSQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0lBVHJDLEFBQUEsT0FBTyxDQUFBO01BVUgsTUFBTSxFQUFFLElBQUk7TUFDWixNQUFNLEVBQUMsS0FBSztNQUNaLE9BQU8sRUFBQyxLQUFLO01BQ2IsT0FBTyxFQUFFLElBQUk7TUFDYixJQUFJLEVBQUUsS0FBSztNQUNYLE1BQU0sRUFBRSxLQUFLLEdBRWhCOztBSGZELEFBQUEsSUFBSSxDQUFDO0VBQ0gsU0FBUyxFQUFFLElBQUk7RUFDZixXQUFXLEVBQUUsQ0FBQyxHQUNmOztBQUVELEFBQUEsRUFBRTtBQUNGLEFBQUEsRUFBRSxDQUFDO0VBQ0QsTUFBTSxFQUFFLENBQUM7RUFDVCxPQUFPLEVBQUUsQ0FBQztFQUNWLGVBQWUsRUFBRSxJQUFJLEdBQ3RCOztBQUVELEFBQUEsQ0FBQyxDQUFDO0VBQ0EsTUFBTSxFQUFFLENBQUMsR0FDVjs7QUFFRCxBQUFBLENBQUMsQ0FBQztFQUNBLGVBQWUsRUFBRSxJQUFJO0VBQ3JCLEtBQUssRUFBRSxJQUFJLEdBQ1o7O0FBRUQsQUFBQSxLQUFLO0FBQ0wsQUFBQSxNQUFNO0FBQ04sQUFBQSxNQUFNO0FBQ04sQUFBQSxHQUFHO0FBQ0gsQUFBQSxHQUFHO0FBQ0gsQUFBQSxLQUFLLENBQUM7RUFDSixjQUFjLEVBQUUsTUFBTSxHQUN2Qjs7QUFFRCxBQUFBLFFBQVEsQ0FBQztFQUNQLE1BQU0sRUFBRSxJQUFJLEdBQ2I7O0FBRUQsQUFBQSxPQUFPLENBQUM7RUFDTixRQUFRLEVBQUUsUUFBUSxHQUNuQjs7QUFFRCxBQUFBLEtBQUs7QUFDTCxBQUFBLE1BQU07QUFDTixBQUFBLE1BQU0sQ0FBQztFQUNMLE9BQU8sRUFBRSxJQUFJLEdBQ2Q7O0FBRUQsQUFBQSxDQUFDO0FBQ0QsQUFBQSxDQUFDLEFBQUEsT0FBTztBQUNSLEFBQUEsQ0FBQyxBQUFBLE1BQU0sQ0FBQztFQUNOLFVBQVUsRUFBRSxVQUFVLEdBQ3ZCOztBQUVELEFBQUEsS0FBSyxDQUFDO0VBQ0osT0FBTyxFQUFFLElBQUksR0FDZDs7QUFFRCxBQUFBLEtBQUssQ0FBQztFQUNKLE9BQU8sRUFBRSxLQUFLLEdBQ2Y7O0FBRUQsQUFDRSxTQURPLEFBQ1AsTUFBTyxDQUFDO0VBQ04sT0FBTyxFQUFFLEVBQUU7RUFDWCxPQUFPLEVBQUUsS0FBSztFQUNkLFdBQVcsRUFBRSxDQUFDO0VBQ2QsS0FBSyxFQUFFLElBQUksR0FDWjs7QUFJSCxBQUFBLFFBQVEsQ0FBQztFQUNQLEtBQUssRUFBRSxJQUFJO0VBQ1gsU0FBUyxFQUFFLE1BQU07RUFDakIsTUFBTSxFQUFFLE1BQU07RUFDZCxRQUFRLEVBQUUsUUFBUSxHQUduQjs7QUs1RUQsQUFBQSxhQUFhLENBQUE7RUFDWCxVQUFVLEVBQUUsSUFBSSxHQUVqQjs7QUNKRCxBQUFBLE1BQU0sQ0FBQztFQUNMLE9BQU8sRUFBRSxLQUFLO0VBQ2QsTUFBTSxFQUFFLE1BQU07RUFDZCxNQUFNLEVBQUUsRUFBRTtFQUNWLE9BQU8sRUFBRSxJQUFJO0VBQ2IsT0FBTyxFQUFFLEdBQUc7RUFDWixNQUFNLEVBQUUsR0FBRztFQUNYLFVBQVUsRUFBRSxVQUFVO0VBQ3RCLE1BQU0sRUFBRSxHQUFHLEdBT1o7RUFmRCxBQVVFLE1BVkksQ0FVSixPQUFPLENBQUM7SUFDTixVQUFVLEVBQUUsVUFBVTtJQUN0QixNQUFNLEVBQUUsY0FBYztJQUN0QixNQUFNLEVBQUUsY0FBYyxHQUN2Qjs7QUNqQkgsQUFBQSxVQUFVLENBQUM7RUFDVCxPQUFPLEVBQUUsS0FBSztFQUNkLFVBQVUsRUFBRSxJQUFJLEdBRWpCOztBQ0RELEFBQUEsR0FBRyxDQUFDO0VBQ0YsT0FBTyxFQUFFLEtBQUssR0FHZiJ9 */
