@import url(../libs/normalize-css/normalize.css);
@import url(../libs/animate.css/animate.min.css);
html {
  font-size: 16px;
  line-height: 1; }

ul,
li {
  margin: 0;
  padding: 0;
  list-style-type: none; }

p {
  margin: 0; }

a {
  text-decoration: none;
  color: blue; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.hide {
  display: none; }

.show {
  display: block; }

.clearfix:after {
  content: '';
  display: table;
  line-height: 0;
  clear: both; }

.wrapper {
  width: 100%;
  max-width: 1270px;
  margin: 0 auto;
  position: relative;
  background: #000;
  border: 2px solid red; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
